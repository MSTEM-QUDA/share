#!/usr/bin/perl -s

if($h or $help or not @ARGV){
    print "
Clone a project from the proper git repository. 

Usage:
  gitclone [-h] [-s] [-history] REPO [flags] [DIRNAME]

-h -help      Print help message.

-s -sleep     Sleep \$GITLABSLEEP seconds after the cloning if the 
              \$GITLABSLEEP environment variable is set to avoid 
              firewall protection against repeated access to the git server.

-history      Clone with history. If not present the --depth 1 is used

REPO          Name of repository
flags         Any git flag.
DIRNAME       Name of local directory (default is same as REPO)

Examples:

Clone BATSRUS repository from swmf_software with history:

   gitclone -history BATSRUS

Clone LATEX repositiry from csem_software without history into Papers/BIBTEX:

   gitclone LATEX Papers/BIBTEX
";
    exit 0;
}

my $Sleep = ($s or $Sleep);
my $History = $history;

use strict;

my $swmf_software     = 'git@gitlab.umich.edu:swmf_software';
my $csem_software     = 'git@gitlab.umich.edu:csem_software';
my $solstice_software = 'git@gitlab.umich.edu:solstice-software';

# The project name should be all capitalized.
my %url = (
    "BATSRUS_GPU"        => $csem_software,
    "BATSRUS_GPU_SIMPLE" => $csem_software,
    "LATEX"              => $csem_software,
    "VAC"                => $csem_software,
    "WSA"                => $csem_software,
    "MSWIM2D"            => $csem_software,
    "GITM"               => "https://github.com/aaronjridley",
    "VISANAMATLAB"       => "https://github.com/henry2004y",
    "VISANAJULIA"        => "https://github.com/henry2004y",
    "PARAMINS_GEOSPACE"  => $solstice_software,
    "CME_LIST"           => $solstice_software,
    "SWMF_PLOT_GEOSPACE" => $solstice_software,
    "SUPERMAGSTATIONS"   => $solstice_software,
    );

my $project = $ARGV[0]; $project =~ s/\.git$//;

my $url = ($url{uc($project)} or $swmf_software);

$ARGV[0] .= " --depth 1" unless $History;

my $command = "git clone $url/".join(" ", @ARGV);
$command .= "; sleep $ENV{GITLABSLEEP}" if ($ENV{GITLABSLEEP} and $Sleep);

print "$command\n";
`$command`;

exit 0;
