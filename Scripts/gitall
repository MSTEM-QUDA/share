#!/usr/bin/perl -s

if($h or $help){
    print "
Recursively find all subdirectories that are Git repositories
and execute the Git command passed in the arguments.
The verbose output from Git status is suppressed unless the -v switch is used.

Usage:
  gitall [-h] [-v] [-s[=N]] GITCOMMAND

-h -help      print this help message
-v -verbose   provide verbose information for the status command
-s -sleep     sleep 5 seconds after each Git command to avoid ssh access issues
-s=N -sleep=N sleep N seconds after each Git command (N should be more than 1)
GITCOMMAND    any Git command

Examples:

Show verbose status of all Git subdirectories:
    gitall -v status

Pull remote version into all Git subdirectories and sleep 5 seconds after each:
    gitall -s pull

";
    exit 0;
}

my $Verbose = ($v or $verbose);
my $Sleep   = ($s or $sleep);
$Sleep = 5 if $Sleep == 1;

use strict;

my $gitcmd;                # The variable to receive the git command

$gitcmd = join(' ',@ARGV);
$gitcmd .= "; sleep $Sleep" if $Sleep;

if($gitcmd){
    my $pwd = `pwd`; chop($pwd);
    &execute_gitall($pwd);
}

exit 0;
#==============================================================================

sub execute_gitall(){
   my($dir) = @_;
   opendir(my $DIR,"$dir") or die "gitall can't open directory $dir\n";
   my @gits= grep { /^.git$/ } readdir($DIR);
   closedir($DIR);
   opendir(my $DIR,"$dir") or die "gitall can't open directory $dir\n";
   my @subdirs = grep { /^[^.]/  && -d "$dir/$_"} readdir($DIR);
   closedir($DIR);
   push @subdirs,@gits;

   my $subdir;
   foreach $subdir (@subdirs){
       if ($subdir eq ".git"){
           my $result = `cd $dir; git $gitcmd`;
	   # remove verbose info
	   if(not $Verbose){
	       $result =~ s/On branch master//;
	       $result =~ s/Your branch is up.to.date with .origin\/master.+//;
	       $result =~ s/nothing to commit, working tree clean//;
	       $result =~ s/^\s*$//g;
	   }
           print "=========== $dir:\n $result \n" if $result;

       }else{
           &execute_gitall("$dir/$subdir");
       }
   }
}






