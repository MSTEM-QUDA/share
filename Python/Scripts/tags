!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
OMNI_HIRES_COLS	swmfpy/web.py	/^OMNI_HIRES_COLS = (('ID for IMF spacecraft', 'id_imf'),$/;"	v
OMNI_LORES_COLS	swmfpy/web.py	/^OMNI_LORES_COLS = (('Bartels rotation number', 'bartels'),$/;"	v
Python Scripts	README.md	/^Python Scripts$/;"	c
__all__	swmfpy/paramin.py	/^__all__ = [$/;"	v
__author__	prepare_geospace.py	/^__author__ = 'Qusai Al Shidi'$/;"	v
__author__	swmfpy/__init__.py	/^__author__ = 'Qusai Al Shidi'$/;"	v
__author__	swmfpy/paramin.py	/^__author__ = 'Qusai Al Shidi'$/;"	v
__author__	swmfpy/tools.py	/^__author__ = 'Qusai Al Shidi'$/;"	v
__author__	swmfpy/web.py	/^__author__ = 'Qusai Al Shidi'$/;"	v
__email__	prepare_geospace.py	/^__email__ = 'qusai@umich.edu'$/;"	v
__email__	swmfpy/__init__.py	/^__email__ = 'qusai@umich.edu'$/;"	v
__email__	swmfpy/paramin.py	/^__email__ = 'qusai@umich.edu'$/;"	v
__email__	swmfpy/tools.py	/^__email__ = 'qusai@umich.edu'$/;"	v
__email__	swmfpy/web.py	/^__email__ = 'qusai@umich.edu'$/;"	v
__license__	swmfpy/__init__.py	/^__license__ = 'MIT'$/;"	v
__maintainer__	swmfpy/__init__.py	/^__maintainer__ = 'Qusai Al Shidi'$/;"	v
__version__	swmfpy/__init__.py	/^__version__ = '2020.1'$/;"	v
_check_bad_omni_num	swmfpy/web.py	/^def _check_bad_omni_num(value_string):$/;"	f
_coarse_filtering	swmfpy/io.py	/^def _coarse_filtering(data, coarseness=3):$/;"	f
_fix_str_duplicates	swmfpy/io.py	/^def _fix_str_duplicates(str_list):$/;"	f
_get_command	swmfpy/paramin.py	/^def _get_command(line):$/;"	f
_get_urls_hmi_b720	swmfpy/web.py	/^def _get_urls_hmi_b720(client, mag_time):$/;"	f
_get_urls_hmi_b_synoptic_small	swmfpy/web.py	/^def _get_urls_hmi_b_synoptic_small(client, mag_time):$/;"	f
_import_error_string	swmfpy/tools.py	/^def _import_error_string(library):$/;"	f
_make_line	swmfpy/tools.py	/^def _make_line(value):$/;"	f
_nearest	swmfpy/tools.py	/^def _nearest(pivot, items):$/;"	f
_time_repr	swmfpy/io.py	/^    def _time_repr(time_raw):$/;"	f	function:write_imf_input	file:
_urls_omni_hires	swmfpy/web.py	/^def _urls_omni_hires(time_from, time_to):$/;"	f
_urls_omni_lores	swmfpy/web.py	/^def _urls_omni_lores(time_from, time_to):$/;"	f
arguments	prepare_geospace.py	/^def arguments():$/;"	f
download_magnetogram_adapt	swmfpy/web.py	/^def download_magnetogram_adapt(time, map_type='fixed', **kwargs):$/;"	f
download_magnetogram_hmi	swmfpy/web.py	/^def download_magnetogram_hmi(mag_time, hmi_map='hmi.B_720s', **kwargs):$/;"	f
dt	swmfpy/io.py	/^import datetime as dt$/;"	I
dt	swmfpy/web.py	/^import datetime as dt$/;"	I
get_omni_data	swmfpy/web.py	/^def get_omni_data(time_from, time_to, **kwargs):$/;"	f
justified	swmfpy/io.py	/^        def justified(str_list, width=7):$/;"	f	function:write_imf_input	file:
make_imf_input	prepare_geospace.py	/^def make_imf_input(times):$/;"	f
np	swmfpy/web.py	/^import numpy as np$/;"	I
read_command	swmfpy/paramin.py	/^def read_command(command, paramin_file='PARAM.in', **kwargs):$/;"	f
read_gm_log	swmfpy/io.py	/^def read_gm_log(filename, colnames=None, dtypes=None, index_time=True):$/;"	f
read_wdc_ae	swmfpy/io.py	/^def read_wdc_ae(wdc_filename):$/;"	f
read_wdc_asy_sym	swmfpy/io.py	/^def read_wdc_asy_sym(wdc_filename):$/;"	f
replace_command	swmfpy/paramin.py	/^def replace_command(parameters, input_file, output_file='PARAM.in'):$/;"	f
write_imf_from_omni	swmfpy/__init__.py	/^def write_imf_from_omni(time_from, time_to, filename='IMF.dat', **kwargs):$/;"	f
write_imf_input	swmfpy/io.py	/^def write_imf_input(imf_data, filename='IMF.dat', **kwargs):$/;"	f
